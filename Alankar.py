import streamlit as st
import re

# === Alankar Detection Functions ===

def detect_utpreksha(sentence):
    imagination_words = ["ркЬрк╛ркгрлЗ", "ркорк╛ркирлАркП ркХрлЗ", "ркЬрлЗрко ркХрлЗ", "ркЬрлЛ ркХрлЗ", "ркерк╛ркп ркПрк╡рлБркВ ркХрлЗ", "рк▓рк╛ркЧрлЗ ркПрк╡рлБркВ ркХрлЗ"]
    return "ркЙркдрлНрккрлНрк░рлЗркХрлНрк╖рк╛ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░" if any(word in sentence for word in imagination_words) else None

def detect_rupak(sentence):
    starts = ["ркдрлЗ", "ркдрлЗркгрлЗ", "ркдрлЗркирлЗ", "ркдрлЗркирлБркВ", "ркдрлЗрк╡рлЛ", "ркПркирлБркВ", "ркПркирк╛", "ркП", "рккрлЗрк▓рлЛ", "рккрлЗрк▓рлА"]
    return "рк░рлВрккркХ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░" if any(sentence.strip().startswith(start) for start in starts) else None

def detect_upama(sentence):
    markers = ["ркХрлЗрко", "ркирлА ркЬрлЗрко", "рккрлНрк░ркорк╛ркгрлЗ", "ркЬрлЗрко"]
    return "ркЙрккркорк╛ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░" if any(marker in sentence for marker in markers) else None

def detect_virodh(sentence):
    contrast_words = ["рккрк░ркВркдрлБ", "рккркг", "ркЫркдрк╛ркВ", "ркдрлЗрко ркЫркдрк╛ркВ", "ркдрлЛркп", "ркдрлЛ рккркг", "ркЫркдрк╛ркВ рккркг"]
    return "рк╡рк┐рк░рлЛркз ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░" if any(word in sentence for word in contrast_words) else None

def detect_apurnokti(sentence):
    apurnokti_keywords = [
        "рк╣рк╡рлЗ рк╣рлБркВ рк╢рлБркВ ркХрк░рлБркВ", "рк╣рк╡рлЗ рк╢рлБркВ ркерк╛ркп", "рк╣рк╡рлЗ рк╢рлБркВ ркерк╢рлЗ", 
        "рк╣рк╡рлЗ рк╢рлБркВ ркХрк░рк╡рлБркВ", "рк╣рлБркВ рк╢рлБркВ ркХрк░рлБркВ", "рк╣рк╡рлЗ рк╢рлБркВ", 
        "ркХрлЗрк╡рлА рк░рлАркдрлЗ ркЖркЧрк│ рк╡ркзрк╡рлБркВ", "ркдрлЛ рккркЫрлА рк╣рлБркВ", 
        "ркЬрлЛ ркП ркЖрк╡рлА ркЬрк╛ркп ркдрлЛ", "ркорк╛рк░рк╛ ркЖрк╢рк╛ркУркирлА ╪п┘Ж█М╪з ркдрлЛ ркмрк╕"
    ]
    sentence_clean = sentence.strip()
    if sentence_clean.endswith("..."):
        return "ркЕрккрлВрк░рлНркгрлЛркХрлНркдрк┐ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░"
    if sentence_clean.endswith("?") and any(keyword in sentence_clean for keyword in apurnokti_keywords):
        return "ркЕрккрлВрк░рлНркгрлЛркХрлНркдрк┐ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░"
    if any(sentence_clean.endswith(keyword) for keyword in apurnokti_keywords):
        return "ркЕрккрлВрк░рлНркгрлЛркХрлНркдрк┐ ркЕрк▓ркВркХрк╛рк░ тАУ ркЕрк░рлНркерк╛рк▓ркВркХрк╛рк░"
    return None

def detect_ananvay_absolute(sentence):
    exclusivity_keywords = ["ркорк╛ркдрлНрк░", "рклркХрлНркд", "ркХрлЗрк╡рк│", "ркЬ"]
    negation_phrases = [
        "ркмрлАркЬрлБркВ ркиркерлА", "ркмрлАркЬрлБркВ ркХрлЛркИ ркиркерлА", "ркмрлАркЬрлБркВ ркирк╣рк┐", "ркмрлАркЬрлБркВ ркХркВркИ ркиркерлА", 
        "ркЕркирлНркп ркХркВркИ ркиркерлА", "ркмрлАркЬрк╛ ркмркзрк╛ркорк╛ркВ ркиркерлА", "ркмрлАркЬрк╛ ркХрлНркпрк╛ркВ ркЫрлЗ"
    ]
    if any(kw in sentence for kw in exclusivity_keywords) and any(re.search(pattern, sentence) for pattern in negation_phrases):
        return "Ananvay (ркЕркиркирлНрк╡ркп) тАУ Absolute Uniqueness"
    return None

def detect_anuprasa(sentence):
    words = sentence.split()
    for ch in set(''.join(sentence)):
        count = sum(word.startswith(ch) for word in words)
        if count >= 2:
            return "рк╡рк░рлНркгрк╛ркирлБрккрлНрк░рк╛рк╕ ркЕрк▓ркВркХрк╛рк░ тАУ рк╢ркмрлНркжрк╛рк▓ркВркХрк╛рк░"
    return None

# === Streamlit Page Setup ===

st.set_page_config(page_title="ркЧрлБркЬрк░рк╛ркдрлА ркЕрк▓ркВркХрк╛рк░", layout="wide")

st.markdown("""
<style>
/* Background gradient */
.stApp {
    background: linear-gradient(135deg, #3b82f6, #fbcfe8);
    background-size: auto;
}
/* Input field styling */
.stTextInput > div > div > input {
    background-color: rgba(255, 255, 255, 0.8) !important;
    color: black !important;
    border: 1px solid #ffffff !important;
}
/* Button styling */
.stButton button {
    background-color: #165BAA !important;
    color: black !important;
    border-radius: 10px;
    font-weight: bold;
}
/* Title and text color */
h1, h2, h3, h4, h5, h6, p {
    color: white !important;
}
</style>
""", unsafe_allow_html=True)

# === App Title ===
st.title("ркЧрлБркЬрк░рк╛ркдрлА ркЕрк▓ркВркХрк╛рк░ рк╢рлЛркзркХ")

# === Input ===
sentence = st.text_input("ркЧрлБркЬрк░рк╛ркдрлА рк╡рк╛ркХрлНркп ркжрк╛ркЦрк▓ ркХрк░рлЛ:")

if st.button("рк╢рлЛркзрлЛ"):
    if sentence.strip():
        detected = None
        for fn in [
            detect_utpreksha,
            detect_rupak,
            detect_upama,
            detect_virodh,
            detect_apurnokti,
            detect_ananvay_absolute,
            detect_anuprasa
        ]:
            result = fn(sentence)
            if result:
                detected = result
                break
        
        st.markdown(f"### рк╡рк╛ркХрлНркп: `{sentence}`")
        st.success(f"ЁЯФН рк╢рлЛркзрк╛ркпрлЗрк▓ ркЕрк▓ркВркХрк╛рк░: **{detected}**" if detected else "тЭМ ркЕрк▓ркВркХрк╛рк░ ркорк│рлНркпрлЛ ркирк╣рлАркВ.")
    else:
        st.warning("ркХрлГрккрк╛ ркХрк░рлАркирлЗ ркХрлЛркИ рк╡рк╛ркХрлНркп ркжрк╛ркЦрк▓ ркХрк░рлЛ.")
